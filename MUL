section .data
	num1 db 0x08
	num2 db 0x05
	res db 2 dup('0')
	
section .text
	global _start
	
_start:
	movzx rax,byte [num1]
	movzx rbx,byte [num2]
	
	xor rcx,rcx
	
	mov rdx,rbx
	
	multiply:
		test rdx,rdx
		jz done
		
		add rcx,rax
		dec rdx
		jmp multiply
	
	done:
		
	mov rax,rcx
	lea rsi,res
	
	convert:
		xor rdx,rdx
		mov rbx,10
		div rbx
		
		add dl,'0'
		mov [rsi],dl
		inc rsi
		
		test ax,ax
		jnz convert
	 
	 mov rsi,0
	 mov rdi,2
	 
	 rev:
	 	cmp rsi,rdi
	 	jge end
	 
	 	dec rdi
	 	mov al,[res+rsi]
	 	mov bl,[res+rdi]
	 	mov [res+rdi],al
	 	mov [res+rsi],bl
	 	inc rsi
	 	jmp rev
	 end:
	 mov rax,1
	 mov rdi,1
	 mov rsi,res
	 mov rdx,2
	 syscall
	 
	 mov rax,60
	 syscall
